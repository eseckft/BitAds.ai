"""remove unnecessary columns and entities

Revision ID: b4315e291669
Revises: 0c3bfbda7a5e
Create Date: 2025-02-26 20:06:43.727046

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import inspect

# revision identifiers, used by Alembic.
revision: str = "b4315e291669"
down_revision: Union[str, None] = "0c3bfbda7a5e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def table_exists(table_name):
    """Checks if a table exists in the database."""
    bind = op.get_bind()
    inspector = inspect(bind)
    return table_name in inspector.get_table_names()


def column_exists(table_name: str, column_name: str) -> bool:
    """Check if a column exists in the given table."""
    bind = op.get_bind()
    inspector = sa.inspect(bind)
    columns = [col["name"] for col in inspector.get_columns(table_name)]
    return column_name in columns


def upgrade(engine_name: str) -> None:
    globals()["upgrade_%s" % engine_name]()


def downgrade(engine_name: str) -> None:
    globals()["downgrade_%s" % engine_name]()


def upgrade_miner_active_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_miner_active_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_validator_active_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    if table_exists("tracking_data"):
        op.drop_table("tracking_data")
        # Drop columns safely if they exist
    columns_to_drop = [
        "count_mouse_movement",
        "count_through_rate_click",
        "count_read_more_click",
        "count_image_click",
        "at",
        "visit_duration",
        "complete_block",
    ]

    for column in columns_to_drop:
        if column_exists("bitads_data", column):
            op.drop_column("bitads_data", column)
    # ### end Alembic commands ###


def downgrade_validator_active_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "bitads_data", sa.Column("complete_block", sa.INTEGER(), nullable=True)
    )
    op.add_column(
        "bitads_data", sa.Column("visit_duration", sa.INTEGER(), nullable=False)
    )
    op.add_column("bitads_data", sa.Column("at", sa.BOOLEAN(), nullable=False))
    op.add_column(
        "bitads_data", sa.Column("count_image_click", sa.INTEGER(), nullable=False)
    )
    op.add_column(
        "bitads_data", sa.Column("count_read_more_click", sa.INTEGER(), nullable=False)
    )
    op.add_column(
        "bitads_data",
        sa.Column("count_through_rate_click", sa.INTEGER(), nullable=False),
    )
    op.add_column(
        "bitads_data", sa.Column("count_mouse_movement", sa.INTEGER(), nullable=False)
    )
    op.create_table(
        "tracking_data",
        sa.Column("id", sa.VARCHAR(), nullable=False),
        sa.Column("count_image_click", sa.INTEGER(), nullable=False),
        sa.Column("count_mouse_movement", sa.INTEGER(), nullable=False),
        sa.Column("count_read_more_click", sa.INTEGER(), nullable=False),
        sa.Column("count_through_rate_click", sa.INTEGER(), nullable=False),
        sa.Column("visit_duration", sa.INTEGER(), nullable=False),
        sa.Column("user_agent", sa.VARCHAR(), nullable=False),
        sa.Column("ip_address", sa.VARCHAR(), nullable=False),
        sa.Column("country", sa.VARCHAR(), nullable=True),
        sa.Column("campaign_id", sa.VARCHAR(), nullable=True),
        sa.Column("validator_block", sa.INTEGER(), nullable=False),
        sa.Column("validator_hotkey", sa.VARCHAR(), nullable=False),
        sa.Column("at", sa.BOOLEAN(), nullable=False),
        sa.Column("device", sa.VARCHAR(length=6), nullable=True),
        sa.Column("is_unique", sa.BOOLEAN(), nullable=False),
        sa.Column("status", sa.VARCHAR(length=9), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.Column("refund", sa.INTEGER(), server_default=sa.text("0"), nullable=False),
        sa.Column("sales", sa.INTEGER(), server_default=sa.text("0"), nullable=False),
        sa.Column(
            "sale_amount", sa.FLOAT(), server_default=sa.text("(0.0)"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def upgrade_miner_history_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def downgrade_miner_history_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###


def upgrade_validator_history_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    if table_exists("tracking_data"):
        op.drop_table("tracking_data")

    # Drop columns safely if they exist
    columns_to_drop = [
        "count_mouse_movement",
        "count_through_rate_click",
        "count_read_more_click",
        "count_image_click",
        "at",
        "visit_duration",
        "complete_block",
    ]

    for column in columns_to_drop:
        if column_exists("bitads_data", column):
            op.drop_column("bitads_data", column)
    # ### end Alembic commands ###


def downgrade_validator_history_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "bitads_data", sa.Column("complete_block", sa.INTEGER(), nullable=True)
    )
    op.add_column(
        "bitads_data", sa.Column("visit_duration", sa.INTEGER(), nullable=False)
    )
    op.add_column("bitads_data", sa.Column("at", sa.BOOLEAN(), nullable=False))
    op.add_column(
        "bitads_data", sa.Column("count_image_click", sa.INTEGER(), nullable=False)
    )
    op.add_column(
        "bitads_data", sa.Column("count_read_more_click", sa.INTEGER(), nullable=False)
    )
    op.add_column(
        "bitads_data",
        sa.Column("count_through_rate_click", sa.INTEGER(), nullable=False),
    )
    op.add_column(
        "bitads_data", sa.Column("count_mouse_movement", sa.INTEGER(), nullable=False)
    )
    op.create_table(
        "tracking_data",
        sa.Column("id", sa.VARCHAR(), nullable=False),
        sa.Column("count_image_click", sa.INTEGER(), nullable=False),
        sa.Column("count_mouse_movement", sa.INTEGER(), nullable=False),
        sa.Column("count_read_more_click", sa.INTEGER(), nullable=False),
        sa.Column("count_through_rate_click", sa.INTEGER(), nullable=False),
        sa.Column("visit_duration", sa.INTEGER(), nullable=False),
        sa.Column("user_agent", sa.VARCHAR(), nullable=False),
        sa.Column("ip_address", sa.VARCHAR(), nullable=False),
        sa.Column("country", sa.VARCHAR(), nullable=True),
        sa.Column("campaign_id", sa.VARCHAR(), nullable=True),
        sa.Column("validator_block", sa.INTEGER(), nullable=False),
        sa.Column("validator_hotkey", sa.VARCHAR(), nullable=False),
        sa.Column("at", sa.BOOLEAN(), nullable=False),
        sa.Column("device", sa.VARCHAR(length=6), nullable=True),
        sa.Column("is_unique", sa.BOOLEAN(), nullable=False),
        sa.Column("status", sa.VARCHAR(length=9), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.Column("refund", sa.INTEGER(), server_default=sa.text("0"), nullable=False),
        sa.Column("sales", sa.INTEGER(), server_default=sa.text("0"), nullable=False),
        sa.Column(
            "sale_amount", sa.FLOAT(), server_default=sa.text("(0.0)"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def upgrade_main_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("completed_visit")
    # ### end Alembic commands ###


def downgrade_main_engine() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "completed_visit",
        sa.Column("id", sa.VARCHAR(), nullable=False),
        sa.Column("referer", sa.VARCHAR(), nullable=True),
        sa.Column("ip_address", sa.VARCHAR(), nullable=False),
        sa.Column("country", sa.VARCHAR(), nullable=True),
        sa.Column("user_agent", sa.VARCHAR(), nullable=False),
        sa.Column("campaign_id", sa.VARCHAR(), nullable=False),
        sa.Column("campaign_item", sa.VARCHAR(), nullable=False),
        sa.Column("miner_hotkey", sa.VARCHAR(), nullable=False),
        sa.Column("at", sa.BOOLEAN(), nullable=False),
        sa.Column("device", sa.VARCHAR(length=6), nullable=True),
        sa.Column("is_unique", sa.BOOLEAN(), nullable=False),
        sa.Column("return_in_site", sa.BOOLEAN(), nullable=False),
        sa.Column("count_image_click", sa.INTEGER(), nullable=False),
        sa.Column("count_mouse_movement", sa.INTEGER(), nullable=False),
        sa.Column("count_read_more_click", sa.INTEGER(), nullable=False),
        sa.Column("count_through_rate_click", sa.INTEGER(), nullable=False),
        sa.Column("miner_block", sa.INTEGER(), nullable=False),
        sa.Column("validator_block", sa.INTEGER(), nullable=False),
        sa.Column("complete_block", sa.INTEGER(), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("refund", sa.INTEGER(), server_default=sa.text("0"), nullable=False),
        sa.Column("sales", sa.INTEGER(), server_default=sa.text("0"), nullable=False),
        sa.Column(
            "sale_amount", sa.FLOAT(), server_default=sa.text("(0.0)"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###
